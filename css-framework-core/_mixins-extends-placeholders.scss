@mixin access {
  left: -99999px;
  position: absolute;
}
@mixin access-focus {
  left: -99999px;
  opacity: 0;
  position: absolute;
  @include transition (opacity, .3s, ease-in);
  &:focus {
    opacity: 1;
    position: static;
  }
}
//The backface-visibility property defines whether or not an element should be visible when not facing the screen.
//This property is useful when an element is rotated, and you do not want to see its backside.
@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}
//Method of applying filter effects (like blur, grayscale or hue) to content/elements below the target element.
@mixin backdrop-filter ($filter) {
  -webkit-backdrop-filter: $filter;
  -moz-backdrop-filter: $filter; //maybe will be supported in the future...
  -o-backdrop-filter: $filter; //maybe will be supported in the future...
  -ms-backdrop-filter: $filter; //maybe will be supported in the future...
  backdrop-filter: $filter;
}
//The box-sizing property is used to tell the browser what the sizing properties (width and height) should include.
%box-sizing-border-box {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
//The box-shadow property attaches one or more shadows to an element.
@mixin box-shadow($x-offset, $y-offset, $blur, $spread, $color, $inset) {
  -webkit-box-shadow: $inset $x-offset $y-offset $blur $spread $color;
  box-shadow: $inset $x-offset $y-offset $blur $spread $color;
}
//bootstrap clearfix placeholder
%clearfix {
  &:before,
  &:after {
    display: table;
    content: "";
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}
@mixin column-count ($column-count) {
  -webkit-column-count: $column-count;
  -moz-column-count: $column-count;
  column-count: $column-count;
}
//
//The column-count property specifies the number of columns an element should be divided into.
@mixin column-design ($colum-gap, $column-width, $column-rule-type, $column-rule-width, $column-rule-color) {
  -webkit-column-gap: $colum-gap;
  -moz-column-gap: $colum-gap;
  column-gap: $colum-gap;
  //
  -webkit-column-width: $column-width;
  -moz-column-width: $column-width;
  column-width: $column-width;
  //
  -webkit-column-rule: $column-rule-width $column-rule-type $column-rule-color;
  -moz-column-rule: $column-rule-width $column-rule-type $column-rule-color;
  column-rule: $column-rule-width $column-rule-type $column-rule-color;
}
//The filter property defines visual effects (like blur and saturation) to an element (often <img>).
@mixin filter ($filter) {
  -webkit-filter: $filter;
  filter: $filter;
}
//The overflow-x property specifies what to do with the left/right edges of the content - if it overflows the element's content area.
@mixin overflow-x ($value) {
  -ms-overflow-x: $value;
  overflow-x: $value;
}
//The overflow-y property specifies what to do with the top/bottom edges of the content - if it overflows the element's content area.
@mixin overflow-y ($value) {
  -ms-overflow-y: $value;
  overflow-y: $value;
}
//The perspective property defines how many pixels a 3D element is placed from the view. This property allows you to change the perspective on how 3D elements are viewed.
//When defining the perspective property for an element, it is the CHILD elements that get the perspective view, NOT the element itself.
//Note: This property must be used together with the perspective property, and only affects 3D transformed elements.
@mixin perspective ($length, $origin) {
  -webkit-perspective: $length;
  -moz-perspective: $length;
  perspective: $length;
  -webkit-perspective-origin: $origin;
  -moz-perspective-origin: $origin;
  perspective-origin: $origin;
}
//Input and Textarea placeholder color
@mixin placeholder($color: $input-color-placeholder) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder {
    color: $color;
  } // Internet Explorer 10+
  &::-webkit-input-placeholder {
    color: $color;
  } // Safari and Chrome
}
// Transformations
@mixin scale($ratioX, $ratioY) {
  -webkit-transform: scale($ratioX, $ratioY);
  -ms-transform: scale($ratioX, $ratioY); // IE9 only
  -o-transform: scale($ratioX, $ratioY);
  transform: scale($ratioX, $ratioY);
}
@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
  -ms-transform: scaleX($ratio); // IE9 only
  -o-transform: scaleX($ratio);
  transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
  -ms-transform: scaleY($ratio); // IE9 only
  -o-transform: scaleY($ratio);
  transform: scaleY($ratio);
}
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  -o-transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y); // IE9 only
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees); // IE9 only
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
  -ms-transform: rotateX($degrees); // IE9 only
  -o-transform: rotateX($degrees);
  transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
  -ms-transform: rotateY($degrees); // IE9 only
  -o-transform: rotateY($degrees);
  transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin; // IE9 only
  transform-origin: $origin;
}
//The transition property is a shorthand property for the four transition properties: transition-property, transition-duration, transition-timing-function, and transition-delay.
@mixin transition ($property, $seconds, $easing) {
  -webkit-transition: $property $seconds $easing;
  -moz-transition: $property $seconds $easing;
  -o-transition: $property $seconds $easing;
  transition: $property $seconds $easing;
}
@mixin double-transition ($property1, $seconds1, $easing1, $property2, $seconds2, $easing2) {
  -webkit-transition: $property1 $seconds1 $easing1, $property2 $seconds2 $easing2;
  -moz-transition: $property1 $seconds1 $easing1, $property2 $seconds2 $easing2;
  -o-transition: $property1 $seconds1 $easing1, $property2 $seconds2 $easing2;
  transition: $property1 $seconds1 $easing1, $property2 $seconds2 $easing2;
}
// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select; // IE10+
  user-select: $select;
}
//Background color for user selected text
@mixin text-selection-color ($color) {
  &::selection {
    background: $color;
  }
  &::-moz-selection {
    background: $color;
  }
}
//reset appearance of buttons and form's input elements 
%reset-appearance {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
//TYPE MIXINS
//truncate the text after x line with css
//$lineHeight: line height for the specific text
//$visibleLinesNumber: number of visible lines
@mixin truncate-text($lineHeight, $visibleLinesNumber) {
  overflow: hidden;
  max-height: $lineHeight * $lineNumber;
}
//
//
//TYPE PLACEHOLDERS
// Alignment
%left {
  text-align: left;
}
%right {
  text-align: right;
}
%center {
  text-align: center;
}
%justify {
  text-align: justify;
}
%nowrap {
  white-space: nowrap;
}
// Transformation
%lowercase {
  text-transform: lowercase;
}
%uppercase {
  text-transform: uppercase;
}
%capitalize {
  text-transform: capitalize;
}
//decorations
%underline {
  text-decoration: underline;
}
%overline {
  text-decoration: overline;
}
%line-through {
  text-decoration: line-through;
}
//borders
%border-underline {
  border-bottom: 1px solid inherit;
}
%border-overline {
  border-top: 1px solid inherit;
}
//ellipsis
%ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
//placeholders for margins and paddings
%margin-auto {
  margin-left: auto;
  margin-right: auto;
}
%reset-margins-paddings {
  margin: 0;
  padding: 0;
}
%reset-margin-left-right {
  margin-left: 0;
  margin-right: 0;
}
%reset-padding-left-right {
  padding-left: 0;
  padding-right: 0;
}
%reset-margin-top-bottom {
  margin-bottom: 0;
  margin-top: 0;
}
%reset-padding-top-bottom {
  padding-bottom: 0;
  padding-top: 0;
}
